# Окружность и многочлен
#
# Дан многочлен нечетной степени, требуется найти его корень.
#
# Входные данные
#
# В первой строке входных данных записано единственное число n (1≤n≤5, n - нечетно) - степень многочлена.
#
# Во второй строке записано n+1 целое число, каждое не превосходит 50 по модулю
# - коэффициенты многочлена от старших к младшим. Первое число - коэффициент при x ^ n
#  , второе при x^(n - 1)
#   и так далее. Гарантируется, что первое число строго больше 0.
#
# Выходные данные
#
# В единственной строке выведите число x, которое является корнем многочлена.
# Ответ будет считаться верным, если значение многочлена в точке x не превосходит 10^-6
#   по модулю.
#
# Sample Input:
#
# 5
# 42 -20 -38 -38 2 -38
# Sample Output:
#
# 1.5636953517814676


from sys import stdin
from decimal import Decimal

input = stdin.readline
n = int(input())
massive = list(map(int,input().split()))
Poly = lambda x: sum((massive[i]*(x**(n-i)) for i in range(n+1)))

ESP = Decimal(1e-9)

def bisect():
  l = Decimal(-20)
  r = Decimal(21)
  while( r - l > ESP):
    mid = (l+r)/2
    if(Poly(mid)<0):
      l = mid
    else:
      r = mid
  return (l+r)/2
print(bisect())
